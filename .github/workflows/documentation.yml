name: Build DocFX Documentation

on:
  push:
    branches:
      - main

jobs:
  # Prepare the Unity package documentation files for the build job
  # documentation-setup:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Generate changelog page
  #       run: |
  #         mkdir -p Documentation~\changelog
  #         cp CHANGELOG.md Documentation~\changelog\CHANGELOG.md
  #         ( echo - name: Changes & echo   href: CHANGELOG.md) > Documentation~\changelog\toc.yml

  #     - name: Generate license page
  #       run: cp LICENSE.md Documentation~\license\LICENSE.md

  #     - name: Upload generated files
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: generated-files
  #         path: Documentation~

  # Build the documentation
  build:
    # needs: documentation-setup
    runs-on: windows-latest # Required by DocFX
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        # with:
        #   submodules: true

      # - name: Download generated files
      #   uses: actions/download-artifact@v1
      #   with:
      #     name: generated-files
      #     path: Documentation~
      
      
      
      # echo - name: Changes > Documentation~\changelog\toc.yml
      # echo   href: CHANGELOG.md >> Documentation~\changelog\toc.yml

      - name: Generate changelog page
        run: |
          mkdir -p Documentation~\changelog
          cp CHANGELOG.md Documentation~\changelog\CHANGELOG.md
          echo '# [Changes](CHANGELOG.md)' > Documentation~\changelog\toc.md

      # - name: Generate license page
      #   run: |
      #     mkdir -p Documentation~\license
      #     cp LICENSE.md Documentation~\license\LICENSE.md
      #     echo - name: License > Documentation~\license\toc.yml
      #     echo   href: LICENSE.md >> Documentation~\license\toc.yml

      - name: Install DocFX
        run: choco install -y docfx

      - name: Build
        run: docfx Documentation~/docfx.json

      # Upload the generated documentation
      - name: Upload site artifact
        uses: actions/upload-artifact@v1
        with:
          name: _site
          path: _site # Must equals the 'build.dest' value on your docfx.json

  # Deploy the generated documentation to the gh-pages branch
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        # with:
        #   submodules: true

      # Download the generated documentation
      - name: Download site artifact
        uses: actions/download-artifact@v1
        with:
          name: _site

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: _site