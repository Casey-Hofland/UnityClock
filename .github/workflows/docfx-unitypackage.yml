name: docfx-unitypackage

on:
  push:
    branches:
      - main

jobs:
  # Build the documentation
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        # with:
        #   submodules: true

      - name: Generate index page
        run: echo 'This page redirects to the [manual](manual/).' > Documentation~/index.md

      - name: Generate main Table of Contents
        # shell: bash
        run: |
          cd Documentation~
          echo '# [Manual](manual/)' > toc.md
          echo '# [Scripting API](api/)' >> toc.md
          echo '# [Changelog](changelog/)' >> toc.md
          echo '# [License](license/)' >> toc.md

      - name: Add api index
        # shell: bash
        run: |
          mkdir -p Documentation~\api
          echo 'This is the documentation for the Scripting APIs of this package.' > Documentation~\api\index.md

      - name: Generate changelog page
        # shell: bash
        run: |
          mkdir -p Documentation~\changelog
          cp CHANGELOG.md Documentation~\changelog\CHANGELOG.md
          echo '# [Changes](CHANGELOG.md)' > Documentation~\changelog\toc.md

      - name: Generate license page
        # shell: bash
        run: |
          mkdir -p Documentation~\license
          cp LICENSE.md Documentation~\license\LICENSE.md
          echo '# [License](LICENSE.md)' > Documentation~\license\toc.md

      # - name: Install DocFX
      #   run: choco install -y docfx

      - name: Dotnet Setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x
      
      - run: dotnet tool update -g docfx

      - name: Build
        run: docfx Documentation~/docfx.json

      - name: Generate a client-side redirect on the index page
        run: |
          echo $github.event.repository.name
          echo $github.pages
          cd _site
          sed -i '19i\      <meta http-equiv="refresh" content="0;URL='https://casey-hofland.github.io/UnityClock/manual/'">' index.html

      # Upload the generated documentation
      - name: Upload site artifact
        uses: actions/upload-artifact@v1
        with:
          name: _site
          path: _site # Must equals the 'build.dest' value on your docfx.json

  # Deploy the generated documentation to the gh-pages branch
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        # with:
        #   submodules: true

      # Download the generated documentation
      - name: Download site artifact
        uses: actions/download-artifact@v1
        with:
          name: _site

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: _site